/*
 * at91-sama5d2_xplained.dts - Device Tree file for SAMA5D2 Xplained board
 *
 *  Copyright (C) 2015 Atmel,
 *                2015 Nicolas Ferre <nicolas.ferre@atmel.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */
/dts-v1/;
#include "sama5d2.dtsi"
#include "sama5d2-pinfunc.h"
#include <dt-bindings/mfd/atmel-flexcom.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pwm/pwm.h>

/ {
	model = "Datalogic Matrix120 SB5269";
	compatible = "datalogic,matrix120-sb5269", "atmel,sama5d2", "atmel,sama5";

	chosen {
		stdout-path = "serial0:115200n8";
	};

	memory {
		reg = <0x20000000 0x80000>;
	};

	clocks {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		main_clock: clock@0 {
			compatible = "atmel,osc", "fixed-clock";
			clock-frequency = <12000000>;
		};

		slow_xtal {
			clock-frequency = <32768>;
		};

		main_xtal {
			clock-frequency = <12000000>;
		};
	};

	ahb {

		usb0: gadget@00300000 {
			status = "okay";
		};

		apb {

			/* FLASH QSPI */
			qspi0: qspi@f0020000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_qspi0_default>;
				status = "okay";

				/* m25 driver autimatically recognize different pn and cuts of FLASH inside m25 family */
				m25p80@0 {
					compatible = "micron,n25q256a", "macronix,mx25l25635f";
					reg = <0>;
					spi-max-frequency = <54000000>;
					m25p,num-dummy-cycles = <10>;
				};
			};

			/* Camera sensor interface - Removed data lines 9-12 as not mapped in our system */
			isc: isc@f0008000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_isc_base &pinctrl_isc_data_8bit>;
				status = "okay";
				port {
					isc_0: endpoint@0 {
						remote-endpoint = <&halogen_0>;
						bus-width = <8>;
						vsync-active = <0>;
					};
				};

			};

			/* Ethernet MAC controller - Keep on even if not connected to Ethernet PHY */
			macb0: ethernet@f8008000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_macb0_rmii>;
				phy-mode = "rmii";
				status = "okay";
			};

			/* Debug serial port (tts0) */
			uart1: serial@f8020000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_uart1_default>;
				status = "okay";
			};

			shdwc@f8048010 {
				atmel,shdwc-debouncer = <976>;

				input@0 {
					reg = <0>;
					atmel,wakeup-type = "low";
				};
			};

			watchdog@f8048040 {
				status = "okay";
			};
			
			can1: can@fc050000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_can1_default>;
				status = "okay";
			}; 			

			/* to pmic i2c */
			i2c1: i2c@fc028000 {
				dmas = <0>, <0>;
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_i2c1_default>;
				status = "okay";

				lm75: lm75@49 {
					compatible = "lm75";
					reg = <0x49>;
				};
			};
						
			/* main uart rs232, rs485 */
			flx4: flexcom@fc018000 {
				atmel,flexcom-mode = <ATMEL_FLEXCOM_MODE_USART>;
				status = "okay";

				uart5: serial@fc018200 {
					compatible = "atmel,at91sam9260-usart";
					reg = <0x200 0x200>;
					interrupts = <23 IRQ_TYPE_LEVEL_HIGH 7>;
					clocks = <&flx4_clk>;
					clock-names = "usart";
					/* atmel_uart driver have been patched to apply rs485 pinctrl on entering rs485 mode and restoring default on exit */
					pinctrl-names = "default","rs485";
					pinctrl-0 = <&pinctrl_flx4_rs232 &pinctrl_max3160_rs232>;
					pinctrl-1 = <&pinctrl_flx4_rs485 &pinctrl_max3160_rs485_full_duplex>;
					atmel,fifo-size = <32>;
					status = "okay";
				};
			};

			pmc: pmc@f0014000 {
				pmc_fast_restart {
					compatible = "atmel,sama5d2-pmc-fast-startup";
					atmel,fast-startup-wake-up;
					atmel,fast-startup-rtc-alarm;
				};
			};

			/* Halogen I2C bus */
			flx1: flexcom@f8038000 {
				atmel,flexcom-mode = <ATMEL_FLEXCOM_MODE_TWI>;
				status = "okay";

				i2c2: i2c@f8038600 {
					compatible = "atmel,sama5d2-i2c";
					clock-frequency = <400000>;
					reg = <0x600 0x200>;
					interrupts = <20 IRQ_TYPE_LEVEL_HIGH 7>;
					dmas = <0>, <0>;
					dma-names = "tx", "rx";
					#address-cells = <1>;
					#size-cells = <0>;
					clocks = <&flx1_clk>;
					pinctrl-names = "default";
					pinctrl-0 = <&pinctrl_flx1_default>;
					atmel,fifo-size = <16>;
					status = "okay";
					
	                                halogen: camera@0x5c {
	                                        compatible = "dla,halogen";
	                                        reg = <0x5c>;
	                                        pinctrl-names = "default";
						pinctrl-0 = <&pinctrl_halogen_default>;
						/*// This is PA5
						pwdn-gpios = <&pioA 5 GPIO_ACTIVE_HIGH>;*/
						// This is PB11 (32+11=43)
						sensledout-gpios = <&pioA 43 GPIO_ACTIVE_HIGH>;

	                                        port {
	                                                halogen_0: endpoint {
	                                                        remote-endpoint = <&isc_0>;
	                                                        bus-width = <8>;
	                                                };
	                                        };
	                                };
				};
			};

			/* Beeper (PA30 PWM) */
			pwm0: pwm@f802c000 {
				compatible = "atmel,sama5d3-pwm";
				reg = <0xf802c000 0x300>;
				interrupts = <28 IRQ_TYPE_LEVEL_HIGH 4>;
				#pwm-cells = <3>;
				clocks = <&pwm_clk>;
				status = "okay";

				pinctrl-names = "default", "enabled";
				pinctrl-0 = <&pinctrl_pwm0_pwmh0_disabled>;
				pinctrl-1 = <&pinctrl_pwm0_pwmh0_enabled>;

				// early initialization of pwm 0
				// it is important to set the inverted polarity asap to avoid abosrbing extra current
				// atmel_pwm driver have been patched to handle pwms nodes.
				pwms = <&pwm0 0 5000000 PWM_POLARITY_INVERTED>;
			};
                        
			pinctrl@fc038000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_key_gpio_default>;
              
				pinctrl_flx4_rs485: flx4_rs485 {
        		                rs485_on {
	                                        pinmux = <PIN_PD21__FLEXCOM4_IO0>,
                                                	 <PIN_PD22__FLEXCOM4_IO1>,
	                                                 <PIN_PD24__FLEXCOM4_IO3>,
	                                                 <PIN_PD25__FLEXCOM4_IO4>;
	                                        bias-disable;
		                        };
		
		                        rs232_off {
        	                                pinmux = <PIN_PC28__GPIO>,
	                                                 <PIN_PC29__GPIO>,
                	                                 <PIN_PC31__GPIO>,
                        	                         <PIN_PD0__GPIO>;
                                	         bias-disable;
		                        };
				};

                                pinctrl_flx4_rs232: flx4_rs242 {
                                        rs485_off {
	                                        pinmux = <PIN_PD21__GPIO>,
	                                                 <PIN_PD22__GPIO>,
	                                                 <PIN_PD24__GPIO>,
	                                                 <PIN_PD25__GPIO>;
                                	         bias-disable;
                                        };

                                        rs232_on {
                                                pinmux = <PIN_PC28__FLEXCOM4_IO0>,
                                                         <PIN_PC29__FLEXCOM4_IO1>,
                                                         <PIN_PC31__FLEXCOM4_IO3>,
                                                         <PIN_PD0__FLEXCOM4_IO4>;
                                                 bias-disable;
                                        };
                                };

                                pinctrl_max3160_rs232: max3160_rs232 {
					power {
	                                        pinmux = <PIN_PA31__GPIO>;
	                                        output-high;
					};

					intsel0_f {
						pinmux = <PIN_PA28__GPIO>;
						output-low;
					};

                                        intsel1_f {
						pinmux = <PIN_PA29__GPIO>;
						output-low;
                                        };
				};

                                pinctrl_max3160_rs485_half_duplex: max3160_rs485_half_duplex {
                                        power {
                                                pinmux = <PIN_PA31__GPIO>;
                                                output-high;
                                        };

                                        intsel0_f {
                                                pinmux = <PIN_PA28__GPIO>;
                                                output-high;
                                        };

                                        intsel1_f {
                                                pinmux = <PIN_PA29__GPIO>;
                                                output-high;
                                        };
                                };

                                pinctrl_max3160_rs485_full_duplex: max3160_rs485_full_duplex {
                                        power {
                                                pinmux = <PIN_PA31__GPIO>;
                                                output-high;
                                        };

                                        intsel0_f {
                                                pinmux = <PIN_PA28__GPIO>;
                                                output-low;
                                        };

                                        intsel1_f {
                                                pinmux = <PIN_PA29__GPIO>;
                                                output-high;
                                        };
                                };

				pinctrl_i2c1_default: i2c1_default {
					pinmux = <PIN_PD4__TWD1>,
						 <PIN_PD5__TWCK1>;
					bias-disable;
				};

				pinctrl_isc_base: isc_base {
					pinmux = <PIN_PC4__ISC_PCK>,
						 <PIN_PC5__ISC_VSYNC>,
						 <PIN_PC6__ISC_HSYNC>;
					bias-disable;
				};

				pinctrl_isc_data_8bit: isc_data_8bit {
					pinmux = <PIN_PB25__ISC_D11>,
						 <PIN_PB24__ISC_D10>,
						 <PIN_PC3__ISC_D9>,
						 <PIN_PC2__ISC_D8>,
						 <PIN_PC1__ISC_D7>,
						 <PIN_PC0__ISC_D6>,
						 <PIN_PB31__ISC_D5>,
						 <PIN_PB30__ISC_D4>;
					bias-disable;
				};

				pinctrl_key_gpio_default: key_gpio_default {
					pinmux = <PIN_PC8__GPIO>,
						 <PIN_PA0__GPIO>,
                                                 <PIN_PA1__GPIO>,
                                                 <PIN_PA2__GPIO>,
                                                 <PIN_PA3__GPIO>,
                                                 <PIN_PA4__GPIO>,
                                                 <PIN_PA6__GPIO>,
                                                 <PIN_PA7__GPIO>,
                                                 <PIN_PA8__GPIO>,
                                                 <PIN_PA9__GPIO>,
                                                 <PIN_PA10__GPIO>,
                                                 <PIN_PA11__GPIO>,
                                                 <PIN_PA12__GPIO>,
                                                 <PIN_PA13__GPIO>;
					bias-pull-up;
				};

				pinctrl_led_gpio_default: led_gpio_default {
					pinmux = <PIN_PB1__GPIO>,
						<PIN_PB2__GPIO>,
						<PIN_PB3__GPIO>,
						<PIN_PB4__GPIO>,
						<PIN_PB5__GPIO>;
					// Respect to prototype, LEDs must be driven open-drain to avoid a VCC-VDD3V3 conflict
					drive-open-drain = <1>;
				};

				// Keep pwm line 0 (PA30) as GPIO to ensure no-one uses it before polarity has been set
				pinctrl_pwm0_pwmh0_disabled: pwm0_pwmh0_disabled {
					pinmux = <PIN_PA30__GPIO>;
					bias-disable;
				}; 

				// Set pwm line 0 (PA30) as pwm line
				pinctrl_pwm0_pwmh0_enabled: pwm0_pwmh0_enabled {
					pinmux = <PIN_PA30__PWMH0>;
					bias-disable;
				}; 

				pinctrl_macb0_rmii: macb0_rmii {
					pinmux = <PIN_PB14__GTXCK>,
						 <PIN_PB15__GTXEN>,
						 <PIN_PB16__GRXDV>,
						 <PIN_PB17__GRXER>,
						 <PIN_PB18__GRX0>,
						 <PIN_PB19__GRX1>,
						 <PIN_PB20__GTX0>,
						 <PIN_PB21__GTX1>,
						 <PIN_PB22__GMDC>,
						 <PIN_PB23__GMDIO>;
					bias-disable;
				};

				pinctrl_qspi0_default: qspi0_default {
					pinmux = <PIN_PA14__QSPI0_SCK>,
						 <PIN_PA15__QSPI0_CS>,
						 <PIN_PA16__QSPI0_IO0>,
						 <PIN_PA17__QSPI0_IO1>,
						 <PIN_PA18__QSPI0_IO2>,
						 <PIN_PA19__QSPI0_IO3>;
					bias-disable;
				};

				pinctrl_spi0_default: spi0_default {
					pinmux = <PIN_PA14__SPI0_SPCK>,
						 <PIN_PA15__SPI0_MOSI>,
						 <PIN_PA16__SPI0_MISO>,
						 <PIN_PA17__SPI0_NPCS0>;
					bias-disable;
				};

				pinctrl_uart1_default: uart1_default {
					pinmux = <PIN_PD2__URXD1>,
						 <PIN_PD3__UTXD1>;
					bias-disable;
				};

				pinctrl_flx1_default: flx1_default {

					i2c {
						pinmux = <PIN_PA23__FLEXCOM1_IO1>,
							 <PIN_PA24__FLEXCOM1_IO0>;
						bias-disable;
					};

					halogen_power {
						pinmux = <PIN_PA5__GPIO>;
						output-low;
					};
				};

				pinctrl_halogen_default: flx1_halogen {
					green_spot {
						pinmux = <PIN_PA27__GPIO>;
						output-low;
                                        };

					sens_ledout  {
						pinmux = <PIN_PB11__GPIO>;
						bias-disable;
                                        };
				};
				
				pinctrl_can1_default: can1_default {
					pinmux = <PIN_PC26__CANTX1>,
						 <PIN_PC27__CANRX1>;
					bias-disable;
				};				
			};
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_led_gpio_default>;
		status = "okay";

		// Respect to prototype, LEDs must be driven with negative logic
		HMI_status {
			label = "HMI_status";
			gpios = <&pioA 33 GPIO_ACTIVE_LOW>;
		};

		HMI_com {
			label = "HMI_com";
			gpios = <&pioA 34 GPIO_ACTIVE_LOW>;
		};

		HMI_trigger {
			label = "HMI_trigger";
			gpios = <&pioA 35 GPIO_ACTIVE_LOW>;
		};
		
		HMI_good {
			label = "HMI_good";
			gpios = <&pioA 36 GPIO_ACTIVE_LOW>;
		};

		HMI_ready {
			label = "HMI_ready";
			gpios = <&pioA 37 GPIO_ACTIVE_LOW>;
		};
		
		HMI_green_spot {
			label = "HMI_green_spot";
			gpios = <&pioA 27 GPIO_ACTIVE_HIGH>;
		};
	};
};

